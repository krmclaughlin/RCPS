// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// checkutilC
bool checkutilC(NumericMatrix Ustar, NumericMatrix Vstar, IntegerMatrix netstage, Function recfromUV3urR, bool reslocal);
RcppExport SEXP _RCPS_checkutilC(SEXP UstarSEXP, SEXP VstarSEXP, SEXP netstageSEXP, SEXP recfromUV3urRSEXP, SEXP reslocalSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Ustar(UstarSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Vstar(VstarSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type netstage(netstageSEXP);
    Rcpp::traits::input_parameter< Function >::type recfromUV3urR(recfromUV3urRSEXP);
    Rcpp::traits::input_parameter< bool >::type reslocal(reslocalSEXP);
    rcpp_result_gen = Rcpp::wrap(checkutilC(Ustar, Vstar, netstage, recfromUV3urR, reslocal));
    return rcpp_result_gen;
END_RCPP
}
// concat
NumericVector concat(NumericVector vec1, NumericVector vec2);
RcppExport SEXP _RCPS_concat(SEXP vec1SEXP, SEXP vec2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type vec1(vec1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type vec2(vec2SEXP);
    rcpp_result_gen = Rcpp::wrap(concat(vec1, vec2));
    return rcpp_result_gen;
END_RCPP
}
// Uab1
NumericVector Uab1(int i, int j, IntegerMatrix adjmat, NumericMatrix U, NumericMatrix V);
RcppExport SEXP _RCPS_Uab1(SEXP iSEXP, SEXP jSEXP, SEXP adjmatSEXP, SEXP USEXP, SEXP VSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type adjmat(adjmatSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type U(USEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type V(VSEXP);
    rcpp_result_gen = Rcpp::wrap(Uab1(i, j, adjmat, U, V));
    return rcpp_result_gen;
END_RCPP
}
// Vab1
NumericVector Vab1(int i, int j, IntegerMatrix adjmat, NumericMatrix U, NumericMatrix V);
RcppExport SEXP _RCPS_Vab1(SEXP iSEXP, SEXP jSEXP, SEXP adjmatSEXP, SEXP USEXP, SEXP VSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type adjmat(adjmatSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type U(USEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type V(VSEXP);
    rcpp_result_gen = Rcpp::wrap(Vab1(i, j, adjmat, U, V));
    return rcpp_result_gen;
END_RCPP
}
// Uab2
NumericVector Uab2(int i, int j, IntegerMatrix adjmat, NumericMatrix U, NumericMatrix V);
RcppExport SEXP _RCPS_Uab2(SEXP iSEXP, SEXP jSEXP, SEXP adjmatSEXP, SEXP USEXP, SEXP VSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type adjmat(adjmatSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type U(USEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type V(VSEXP);
    rcpp_result_gen = Rcpp::wrap(Uab2(i, j, adjmat, U, V));
    return rcpp_result_gen;
END_RCPP
}
// Vab2
NumericVector Vab2(int i, int j, IntegerMatrix adjmat, NumericMatrix U, NumericMatrix V);
RcppExport SEXP _RCPS_Vab2(SEXP iSEXP, SEXP jSEXP, SEXP adjmatSEXP, SEXP USEXP, SEXP VSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type adjmat(adjmatSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type U(USEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type V(VSEXP);
    rcpp_result_gen = Rcpp::wrap(Vab2(i, j, adjmat, U, V));
    return rcpp_result_gen;
END_RCPP
}
// Uab3
NumericVector Uab3(int i, int j, IntegerMatrix adjmat, NumericMatrix U, NumericMatrix V);
RcppExport SEXP _RCPS_Uab3(SEXP iSEXP, SEXP jSEXP, SEXP adjmatSEXP, SEXP USEXP, SEXP VSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type adjmat(adjmatSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type U(USEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type V(VSEXP);
    rcpp_result_gen = Rcpp::wrap(Uab3(i, j, adjmat, U, V));
    return rcpp_result_gen;
END_RCPP
}
// Uab4
NumericVector Uab4(int i, int j, IntegerMatrix adjmat, NumericMatrix U, NumericMatrix V);
RcppExport SEXP _RCPS_Uab4(SEXP iSEXP, SEXP jSEXP, SEXP adjmatSEXP, SEXP USEXP, SEXP VSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type adjmat(adjmatSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type U(USEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type V(VSEXP);
    rcpp_result_gen = Rcpp::wrap(Uab4(i, j, adjmat, U, V));
    return rcpp_result_gen;
END_RCPP
}
// Vab5
NumericVector Vab5(int i, int j, IntegerMatrix adjmat, NumericMatrix U, NumericMatrix V);
RcppExport SEXP _RCPS_Vab5(SEXP iSEXP, SEXP jSEXP, SEXP adjmatSEXP, SEXP USEXP, SEXP VSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type adjmat(adjmatSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type U(USEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type V(VSEXP);
    rcpp_result_gen = Rcpp::wrap(Vab5(i, j, adjmat, U, V));
    return rcpp_result_gen;
END_RCPP
}
// Vab6
NumericVector Vab6(int i, int j, IntegerMatrix adjmat, NumericMatrix U, NumericMatrix V);
RcppExport SEXP _RCPS_Vab6(SEXP iSEXP, SEXP jSEXP, SEXP adjmatSEXP, SEXP USEXP, SEXP VSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type adjmat(adjmatSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type U(USEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type V(VSEXP);
    rcpp_result_gen = Rcpp::wrap(Vab6(i, j, adjmat, U, V));
    return rcpp_result_gen;
END_RCPP
}
// makeU
NumericMatrix makeU(NumericMatrix charrec, NumericMatrix charpeer, NumericVector alpha, NumericVector ksi, NumericMatrix epsilon);
RcppExport SEXP _RCPS_makeU(SEXP charrecSEXP, SEXP charpeerSEXP, SEXP alphaSEXP, SEXP ksiSEXP, SEXP epsilonSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type charrec(charrecSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type charpeer(charpeerSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ksi(ksiSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type epsilon(epsilonSEXP);
    rcpp_result_gen = Rcpp::wrap(makeU(charrec, charpeer, alpha, ksi, epsilon));
    return rcpp_result_gen;
END_RCPP
}
// makeV
NumericMatrix makeV(NumericMatrix charrec, NumericMatrix charpeer, NumericVector beta, NumericVector zeta, NumericMatrix gamma);
RcppExport SEXP _RCPS_makeV(SEXP charrecSEXP, SEXP charpeerSEXP, SEXP betaSEXP, SEXP zetaSEXP, SEXP gammaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type charrec(charrecSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type charpeer(charpeerSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type zeta(zetaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type gamma(gammaSEXP);
    rcpp_result_gen = Rcpp::wrap(makeV(charrec, charpeer, beta, zeta, gamma));
    return rcpp_result_gen;
END_RCPP
}
// makeEL
DataFrame makeEL(IntegerMatrix adjmat, IntegerVector sindex, IntegerVector pindex, int w);
RcppExport SEXP _RCPS_makeEL(SEXP adjmatSEXP, SEXP sindexSEXP, SEXP pindexSEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type adjmat(adjmatSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type sindex(sindexSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type pindex(pindexSEXP);
    Rcpp::traits::input_parameter< int >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(makeEL(adjmat, sindex, pindex, w));
    return rcpp_result_gen;
END_RCPP
}
// getType
int getType(int i, int j, IntegerMatrix adjmat, NumericMatrix U, NumericMatrix V);
RcppExport SEXP _RCPS_getType(SEXP iSEXP, SEXP jSEXP, SEXP adjmatSEXP, SEXP USEXP, SEXP VSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type adjmat(adjmatSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type U(USEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type V(VSEXP);
    rcpp_result_gen = Rcpp::wrap(getType(i, j, adjmat, U, V));
    return rcpp_result_gen;
END_RCPP
}
// newUijC
double newUijC(int i, int j, IntegerMatrix adjmat, NumericMatrix U, NumericMatrix V, NumericVector alpha, NumericVector Xij, Function rtruncnorm);
RcppExport SEXP _RCPS_newUijC(SEXP iSEXP, SEXP jSEXP, SEXP adjmatSEXP, SEXP USEXP, SEXP VSEXP, SEXP alphaSEXP, SEXP XijSEXP, SEXP rtruncnormSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type adjmat(adjmatSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type U(USEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type V(VSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Xij(XijSEXP);
    Rcpp::traits::input_parameter< Function >::type rtruncnorm(rtruncnormSEXP);
    rcpp_result_gen = Rcpp::wrap(newUijC(i, j, adjmat, U, V, alpha, Xij, rtruncnorm));
    return rcpp_result_gen;
END_RCPP
}
// newVjiC
double newVjiC(int i, int j, IntegerMatrix adjmat, NumericMatrix U, NumericMatrix V, NumericVector beta, NumericVector Yji, Function rtruncnorm);
RcppExport SEXP _RCPS_newVjiC(SEXP iSEXP, SEXP jSEXP, SEXP adjmatSEXP, SEXP USEXP, SEXP VSEXP, SEXP betaSEXP, SEXP YjiSEXP, SEXP rtruncnormSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type adjmat(adjmatSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type U(USEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type V(VSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Yji(YjiSEXP);
    Rcpp::traits::input_parameter< Function >::type rtruncnorm(rtruncnormSEXP);
    rcpp_result_gen = Rcpp::wrap(newVjiC(i, j, adjmat, U, V, beta, Yji, rtruncnorm));
    return rcpp_result_gen;
END_RCPP
}
// gibbsC
List gibbsC(int Kcalc, NumericVector alphastart, NumericVector betastart, List adjmat, List nrec, List npeer, List X, List Y, List Ustar, List Vstar, Function expgrid, Function rtruncnorm, Function sample, NumericVector ma0, NumericMatrix sa0, NumericVector mb0, NumericMatrix sb0, double tallowed, Function recfromUV3urR, bool reslocal, Function mvrnorm, bool updlast);
RcppExport SEXP _RCPS_gibbsC(SEXP KcalcSEXP, SEXP alphastartSEXP, SEXP betastartSEXP, SEXP adjmatSEXP, SEXP nrecSEXP, SEXP npeerSEXP, SEXP XSEXP, SEXP YSEXP, SEXP UstarSEXP, SEXP VstarSEXP, SEXP expgridSEXP, SEXP rtruncnormSEXP, SEXP sampleSEXP, SEXP ma0SEXP, SEXP sa0SEXP, SEXP mb0SEXP, SEXP sb0SEXP, SEXP tallowedSEXP, SEXP recfromUV3urRSEXP, SEXP reslocalSEXP, SEXP mvrnormSEXP, SEXP updlastSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type Kcalc(KcalcSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type alphastart(alphastartSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type betastart(betastartSEXP);
    Rcpp::traits::input_parameter< List >::type adjmat(adjmatSEXP);
    Rcpp::traits::input_parameter< List >::type nrec(nrecSEXP);
    Rcpp::traits::input_parameter< List >::type npeer(npeerSEXP);
    Rcpp::traits::input_parameter< List >::type X(XSEXP);
    Rcpp::traits::input_parameter< List >::type Y(YSEXP);
    Rcpp::traits::input_parameter< List >::type Ustar(UstarSEXP);
    Rcpp::traits::input_parameter< List >::type Vstar(VstarSEXP);
    Rcpp::traits::input_parameter< Function >::type expgrid(expgridSEXP);
    Rcpp::traits::input_parameter< Function >::type rtruncnorm(rtruncnormSEXP);
    Rcpp::traits::input_parameter< Function >::type sample(sampleSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ma0(ma0SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type sa0(sa0SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mb0(mb0SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type sb0(sb0SEXP);
    Rcpp::traits::input_parameter< double >::type tallowed(tallowedSEXP);
    Rcpp::traits::input_parameter< Function >::type recfromUV3urR(recfromUV3urRSEXP);
    Rcpp::traits::input_parameter< bool >::type reslocal(reslocalSEXP);
    Rcpp::traits::input_parameter< Function >::type mvrnorm(mvrnormSEXP);
    Rcpp::traits::input_parameter< bool >::type updlast(updlastSEXP);
    rcpp_result_gen = Rcpp::wrap(gibbsC(Kcalc, alphastart, betastart, adjmat, nrec, npeer, X, Y, Ustar, Vstar, expgrid, rtruncnorm, sample, ma0, sa0, mb0, sb0, tallowed, recfromUV3urR, reslocal, mvrnorm, updlast));
    return rcpp_result_gen;
END_RCPP
}
// makeNetstageC
IntegerMatrix makeNetstageC(IntegerMatrix netstage, IntegerVector recvec, IntegerVector peervec);
RcppExport SEXP _RCPS_makeNetstageC(SEXP netstageSEXP, SEXP recvecSEXP, SEXP peervecSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type netstage(netstageSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type recvec(recvecSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type peervec(peervecSEXP);
    rcpp_result_gen = Rcpp::wrap(makeNetstageC(netstage, recvec, peervec));
    return rcpp_result_gen;
END_RCPP
}
// whichCone
int whichCone(NumericVector x, int val);
RcppExport SEXP _RCPS_whichCone(SEXP xSEXP, SEXP valSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type val(valSEXP);
    rcpp_result_gen = Rcpp::wrap(whichCone(x, val));
    return rcpp_result_gen;
END_RCPP
}
// maxintNoNA
int maxintNoNA(IntegerVector x);
RcppExport SEXP _RCPS_maxintNoNA(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(maxintNoNA(x));
    return rcpp_result_gen;
END_RCPP
}
// recfromUV3urC
List recfromUV3urC(IntegerMatrix Urank, IntegerMatrix Vrank, bool reslocal);
RcppExport SEXP _RCPS_recfromUV3urC(SEXP UrankSEXP, SEXP VrankSEXP, SEXP reslocalSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type Urank(UrankSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type Vrank(VrankSEXP);
    Rcpp::traits::input_parameter< bool >::type reslocal(reslocalSEXP);
    rcpp_result_gen = Rcpp::wrap(recfromUV3urC(Urank, Vrank, reslocal));
    return rcpp_result_gen;
END_RCPP
}
// peerChoice
IntegerVector peerChoice(List recsels, IntegerMatrix Vrank);
RcppExport SEXP _RCPS_peerChoice(SEXP recselsSEXP, SEXP VrankSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type recsels(recselsSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type Vrank(VrankSEXP);
    rcpp_result_gen = Rcpp::wrap(peerChoice(recsels, Vrank));
    return rcpp_result_gen;
END_RCPP
}
// listReassign
List listReassign(int nrec, int npeer, IntegerVector jchoice, List RS);
RcppExport SEXP _RCPS_listReassign(SEXP nrecSEXP, SEXP npeerSEXP, SEXP jchoiceSEXP, SEXP RSSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type nrec(nrecSEXP);
    Rcpp::traits::input_parameter< int >::type npeer(npeerSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type jchoice(jchoiceSEXP);
    Rcpp::traits::input_parameter< List >::type RS(RSSEXP);
    rcpp_result_gen = Rcpp::wrap(listReassign(nrec, npeer, jchoice, RS));
    return rcpp_result_gen;
END_RCPP
}
// firstZero
int firstZero(IntegerVector x);
RcppExport SEXP _RCPS_firstZero(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(firstZero(x));
    return rcpp_result_gen;
END_RCPP
}
// makeX
List makeX(IntegerMatrix charrec, IntegerMatrix charpeer, IntegerMatrix netstage);
RcppExport SEXP _RCPS_makeX(SEXP charrecSEXP, SEXP charpeerSEXP, SEXP netstageSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type charrec(charrecSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type charpeer(charpeerSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type netstage(netstageSEXP);
    rcpp_result_gen = Rcpp::wrap(makeX(charrec, charpeer, netstage));
    return rcpp_result_gen;
END_RCPP
}
// makeY
List makeY(IntegerMatrix charrec, IntegerMatrix charpeer, IntegerMatrix netstage);
RcppExport SEXP _RCPS_makeY(SEXP charrecSEXP, SEXP charpeerSEXP, SEXP netstageSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type charrec(charrecSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type charpeer(charpeerSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type netstage(netstageSEXP);
    rcpp_result_gen = Rcpp::wrap(makeY(charrec, charpeer, netstage));
    return rcpp_result_gen;
END_RCPP
}
// calcU
NumericMatrix calcU(NumericVector alpha, List X, NumericMatrix epsilon);
RcppExport SEXP _RCPS_calcU(SEXP alphaSEXP, SEXP XSEXP, SEXP epsilonSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< List >::type X(XSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type epsilon(epsilonSEXP);
    rcpp_result_gen = Rcpp::wrap(calcU(alpha, X, epsilon));
    return rcpp_result_gen;
END_RCPP
}
// calcV
NumericMatrix calcV(NumericVector beta, List Y, NumericMatrix gamma);
RcppExport SEXP _RCPS_calcV(SEXP betaSEXP, SEXP YSEXP, SEXP gammaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< List >::type Y(YSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type gamma(gammaSEXP);
    rcpp_result_gen = Rcpp::wrap(calcV(beta, Y, gamma));
    return rcpp_result_gen;
END_RCPP
}
// ipNoSelf
double ipNoSelf(NumericVector vec1, NumericVector vec2);
RcppExport SEXP _RCPS_ipNoSelf(SEXP vec1SEXP, SEXP vec2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type vec1(vec1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type vec2(vec2SEXP);
    rcpp_result_gen = Rcpp::wrap(ipNoSelf(vec1, vec2));
    return rcpp_result_gen;
END_RCPP
}
// ipSelf
double ipSelf(NumericVector vec1, NumericVector vec2);
RcppExport SEXP _RCPS_ipSelf(SEXP vec1SEXP, SEXP vec2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type vec1(vec1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type vec2(vec2SEXP);
    rcpp_result_gen = Rcpp::wrap(ipSelf(vec1, vec2));
    return rcpp_result_gen;
END_RCPP
}
// alphaFromU
NumericVector alphaFromU(List X, arma::mat U, arma::vec ma0, arma::mat sa0, Function mvrnorm);
RcppExport SEXP _RCPS_alphaFromU(SEXP XSEXP, SEXP USEXP, SEXP ma0SEXP, SEXP sa0SEXP, SEXP mvrnormSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type U(USEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ma0(ma0SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type sa0(sa0SEXP);
    Rcpp::traits::input_parameter< Function >::type mvrnorm(mvrnormSEXP);
    rcpp_result_gen = Rcpp::wrap(alphaFromU(X, U, ma0, sa0, mvrnorm));
    return rcpp_result_gen;
END_RCPP
}
// betaFromV
NumericVector betaFromV(List Y, arma::mat V, arma::vec mb0, arma::mat sb0, Function mvrnorm);
RcppExport SEXP _RCPS_betaFromV(SEXP YSEXP, SEXP VSEXP, SEXP mb0SEXP, SEXP sb0SEXP, SEXP mvrnormSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type V(VSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mb0(mb0SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type sb0(sb0SEXP);
    Rcpp::traits::input_parameter< Function >::type mvrnorm(mvrnormSEXP);
    rcpp_result_gen = Rcpp::wrap(betaFromV(Y, V, mb0, sb0, mvrnorm));
    return rcpp_result_gen;
END_RCPP
}
// whichC
IntegerVector whichC(NumericVector x, int val);
RcppExport SEXP _RCPS_whichC(SEXP xSEXP, SEXP valSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type val(valSEXP);
    rcpp_result_gen = Rcpp::wrap(whichC(x, val));
    return rcpp_result_gen;
END_RCPP
}
// optsetU
NumericVector optsetU(int i, int j, IntegerMatrix adjmat, NumericMatrix U, NumericMatrix V);
RcppExport SEXP _RCPS_optsetU(SEXP iSEXP, SEXP jSEXP, SEXP adjmatSEXP, SEXP USEXP, SEXP VSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type adjmat(adjmatSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type U(USEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type V(VSEXP);
    rcpp_result_gen = Rcpp::wrap(optsetU(i, j, adjmat, U, V));
    return rcpp_result_gen;
END_RCPP
}
// optsetV
NumericVector optsetV(int i, int j, IntegerMatrix adjmat, NumericMatrix U, NumericMatrix V);
RcppExport SEXP _RCPS_optsetV(SEXP iSEXP, SEXP jSEXP, SEXP adjmatSEXP, SEXP USEXP, SEXP VSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type adjmat(adjmatSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type U(USEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type V(VSEXP);
    rcpp_result_gen = Rcpp::wrap(optsetV(i, j, adjmat, U, V));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_RCPS_checkutilC", (DL_FUNC) &_RCPS_checkutilC, 5},
    {"_RCPS_concat", (DL_FUNC) &_RCPS_concat, 2},
    {"_RCPS_Uab1", (DL_FUNC) &_RCPS_Uab1, 5},
    {"_RCPS_Vab1", (DL_FUNC) &_RCPS_Vab1, 5},
    {"_RCPS_Uab2", (DL_FUNC) &_RCPS_Uab2, 5},
    {"_RCPS_Vab2", (DL_FUNC) &_RCPS_Vab2, 5},
    {"_RCPS_Uab3", (DL_FUNC) &_RCPS_Uab3, 5},
    {"_RCPS_Uab4", (DL_FUNC) &_RCPS_Uab4, 5},
    {"_RCPS_Vab5", (DL_FUNC) &_RCPS_Vab5, 5},
    {"_RCPS_Vab6", (DL_FUNC) &_RCPS_Vab6, 5},
    {"_RCPS_makeU", (DL_FUNC) &_RCPS_makeU, 5},
    {"_RCPS_makeV", (DL_FUNC) &_RCPS_makeV, 5},
    {"_RCPS_makeEL", (DL_FUNC) &_RCPS_makeEL, 4},
    {"_RCPS_getType", (DL_FUNC) &_RCPS_getType, 5},
    {"_RCPS_newUijC", (DL_FUNC) &_RCPS_newUijC, 8},
    {"_RCPS_newVjiC", (DL_FUNC) &_RCPS_newVjiC, 8},
    {"_RCPS_gibbsC", (DL_FUNC) &_RCPS_gibbsC, 22},
    {"_RCPS_makeNetstageC", (DL_FUNC) &_RCPS_makeNetstageC, 3},
    {"_RCPS_whichCone", (DL_FUNC) &_RCPS_whichCone, 2},
    {"_RCPS_maxintNoNA", (DL_FUNC) &_RCPS_maxintNoNA, 1},
    {"_RCPS_recfromUV3urC", (DL_FUNC) &_RCPS_recfromUV3urC, 3},
    {"_RCPS_peerChoice", (DL_FUNC) &_RCPS_peerChoice, 2},
    {"_RCPS_listReassign", (DL_FUNC) &_RCPS_listReassign, 4},
    {"_RCPS_firstZero", (DL_FUNC) &_RCPS_firstZero, 1},
    {"_RCPS_makeX", (DL_FUNC) &_RCPS_makeX, 3},
    {"_RCPS_makeY", (DL_FUNC) &_RCPS_makeY, 3},
    {"_RCPS_calcU", (DL_FUNC) &_RCPS_calcU, 3},
    {"_RCPS_calcV", (DL_FUNC) &_RCPS_calcV, 3},
    {"_RCPS_ipNoSelf", (DL_FUNC) &_RCPS_ipNoSelf, 2},
    {"_RCPS_ipSelf", (DL_FUNC) &_RCPS_ipSelf, 2},
    {"_RCPS_alphaFromU", (DL_FUNC) &_RCPS_alphaFromU, 5},
    {"_RCPS_betaFromV", (DL_FUNC) &_RCPS_betaFromV, 5},
    {"_RCPS_whichC", (DL_FUNC) &_RCPS_whichC, 2},
    {"_RCPS_optsetU", (DL_FUNC) &_RCPS_optsetU, 5},
    {"_RCPS_optsetV", (DL_FUNC) &_RCPS_optsetV, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_RCPS(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
